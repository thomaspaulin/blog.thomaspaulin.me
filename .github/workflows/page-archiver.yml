# This is a basic workflow to help you get started with Actions

name: External Page Archiver
# Finds external pages by scanning the diffed Markdown files for external links.
# When external links are found they are archived, provided they pass the blacklist check.

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  pull_request:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  archive_external_pages:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: jitterbit/get-changed-files@v1
        id: diff
        with:
          format: 'json'
          token: ${{ secrets.GITHUB_TOKEN }}

      # todo add a step which calls the Lambda, or run the code directly from here? No lambda required
      # Runs a single command using the runners shell
      - name: Find and archive pages
        run: echo "${{ steps.diff.outputs.added_modified }}"
